# backend/java-springboot/src/main/resources/application.properties

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Database Configuration (hardcoded credentials - intentional security issue)
spring.datasource.url=jdbc:postgresql://postgres:5432/springdb
spring.datasource.username=postgres
spring.datasource.password=hardcoded_spring_db_password_789
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Security Configuration (intentionally insecure)
spring.security.user.name=admin
spring.security.user.password=admin123
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Logging Configuration (overly verbose for security testing)
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.com.csb=DEBUG

# Session Configuration (insecure settings)
server.servlet.session.timeout=1h
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=false

# Application-specific secrets (intentional security issues)
app.jwt.secret=hardcoded_jwt_secret_spring_456
app.api.key=sk_live_spring_api_key_123
app.aws.access-key=AKIAIOSFODNN7SPRINGEXAMPLE
app.aws.secret-key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYSPRINGKEY